@model EventFinder_GC.Models.EventApi

@{
    ViewBag.Title = "Details";
}

<div>

    <h4>Customer</h4>
    <hr />
    <dl class=" = dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.EventName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EventName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.VenueName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.VenueName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Date)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Date)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Category)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Category)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SubCategory)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SubCategory)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Street)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Street)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>


        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ZipCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ZipCode)
        </dd>
    </dl>

    <img src=@Html.Raw(Model.ImagePath)>
</div>

@Html.ActionLink("Rate Event Via Our SMS Feature!", "RedirectSMSRate")








<h2>Event Host and Rating</h2>
<h2>Event Host: @ViewBag.EventHostName</h2>
<h2>Host Rating For This Category: @ViewBag.HostRatingByCategory</h2>


<div id="map"></div>
<script>
    function initMap() {
    var pointA = new google.maps.LatLng(@ViewBag.CustLat, @ViewBag.CustLng),
        pointB = new google.maps.LatLng(@Model.Latitude, @Model.Longitude),
        myOptions = {
            zoom: 7,
            center: pointA
        },
        map = new google.maps.Map(document.getElementById('map'), myOptions),
        // Instantiate a directions service.
        directionsService = new google.maps.DirectionsService,
        directionsDisplay = new google.maps.DirectionsRenderer({
            map: map
        }),
        markerA = new google.maps.Marker({
            position: pointA,
            title: "point A",
            label: "A",
            map: map
        }),
        markerB = new google.maps.Marker({
            position: pointB,
            title: "point B",
            label: "B",
            map: map
        });

    // get route from A to B
    calculateAndDisplayRoute(directionsService, directionsDisplay, pointA, pointB);

}



function calculateAndDisplayRoute(directionsService, directionsDisplay, pointA, pointB) {
    directionsService.route({
        origin: pointA,
        destination: pointB,
        avoidTolls: true,
        avoidHighways: false,
        travelMode: google.maps.TravelMode.DRIVING
    }, function (response, status) {
        if (status == google.maps.DirectionsStatus.OK) {
            directionsDisplay.setDirections(response);
        } else {
            window.alert('Directions request failed due to ' + status);
        }
    });
}

</script>
<script async defer src=@ViewBag.Key></script>

<p>@Html.ActionLink("Back to Events List", "Index")</p>

